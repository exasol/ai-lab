name: Notebook Tests

on:
  workflow_call:
    inputs:
      status-filter:
          description: 'Only nb tests with the given status will be executed.'
          required: true
          type: string
      test-classification:
          description: 'normal, large or GPU'
          type: string
          required: true
jobs:
  fetch-notebook-tests:
    runs-on: ubuntu-24.04
    name: Fetching tests
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@v1
        with:
          python-version: "3.10"

      - id: set-tests
        run: |
          TESTS=`poetry run -- nox -s get-notebook-tests -- --test-status ${{ inputs.status-filter }} --test-classification ${{ inputs.test-classification }}`
          echo "tests=$TESTS" >> "$GITHUB_OUTPUT"

      - id: set-runner
        run: |
          RUNNER=`poetry run -- nox -s get-runner -- --test-status ${{ inputs.status-filter }} --test-classification ${{ inputs.test-classification }}`
          echo "runner=$RUNNER" >> "$GITHUB_OUTPUT"

      - id: set-additional-pytest-parameters
        run: |
          ADD_PARAMS=`poetry run -- nox -s get-additional-pytest-parameter -- --test-status ${{ inputs.status-filter }} --test-classification ${{ inputs.test-classification }}`
          echo "additional_pytest_parameters=$ADD_PARAMS" >> "$GITHUB_OUTPUT"

    outputs:
      tests: ${{ steps.set-tests.outputs.tests }}
      runner: ${{ steps.set-runner.outputs.runner }}
      additional-pytest-parameters: ${{ steps.set-additional-pytest-parameters.outputs.additional_pytest_parameters }}


  notebook_tests-normal-runner:
    needs: [fetch-notebook-tests]
    environment: AWS_SAGEMAKER
    runs-on: ${{ needs.fetch-notebook-tests.outputs.runner }}
    env:
      DOCKER_TAG: "${{ matrix.nb_test.wip }}-${{ github.sha }}"
      DOCKER_IMG_ARTIFACT: "ai-lab-${{ matrix.nb_test.wip }}-${{ github.sha }}"
      DOCKER_IMG_FILENAME: "ai-lab-${{ matrix.nb_test.wip }}-${{ github.sha }}.tar"
    strategy:
      fail-fast: false
      matrix:
        nb_test: ${{fromJson(needs.fetch-notebook-tests.outputs.tests).tests}}
    name: Running ${{ matrix.nb_test.name }} - ${{ matrix.nb_test.test_backend }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: ./.github/actions/prepare_test_env/

      - name: Download ai-lab image ${{matrix.nb_test.wip}}
        id: download-image
        uses: actions/download-artifact@v5
        with:
          name: "${{ env.DOCKER_IMG_ARTIFACT }}"
          path: "."

      - name: Load ai-lab image ${{matrix.nb_test.wip}}
        run: docker load -i "./$DOCKER_IMG_FILENAME"

      - name: Run notebook tests
        run: |
          poetry run -- pytest \
            --capture=no \
            --override-ini=log_cli=true \
            --override-ini=log_cli_level=INFO \
            --dss-docker-image="exasol/ai-lab:$DOCKER_TAG" \
            --nb-test-backend=${{ matrix.nb_test.test_backend }} \
            --nb-test-file=${{ matrix.nb_test.test_file }} \
            ${{ needs.fetch-notebook-tests.outputs.additional-pytest-parameters }} \
            test/notebook_test_runner/test_notebooks_in_dss_docker_image.py

        env:
          SAAS_HOST: ${{ secrets.INTEGRATION_TEAM_SAAS_STAGING_HOST }}
          SAAS_ACCOUNT_ID: ${{ secrets.INTEGRATION_TEAM_SAAS_STAGING_ACCOUNT_ID }}
          SAAS_PAT: ${{ secrets.INTEGRATION_TEAM_SAAS_STAGING_PAT }}
          NBTEST_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          NBTEST_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          NBTEST_AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          PROJECT_SHORT_TAG: XAIL-NB
