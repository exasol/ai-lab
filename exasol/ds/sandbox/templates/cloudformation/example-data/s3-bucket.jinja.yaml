Resources:
  AiLabExampleDataBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: 'Private'
    Metadata:
      Comment: 'Bucket to store example data for the AI-Lab'
    DeletionPolicy: Retain
    UpdateReplacePolicy : Retain
  S3CDNBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref AiLabExampleDataBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:GetObject'
            Principal:
              Service: "cloudfront.amazonaws.com"
            Resource:
              - !Sub "arn:aws:s3:::${ AiLabExampleDataBucket }/{{path_in_bucket}}/*"
            Condition:
              StringEquals:
                'AWS:SourceArn': !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CfDistribution}"

  CfDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Comment: 'A simple distribution with an S3 origin'
        DefaultCacheBehavior:
          AllowedMethods:
            - 'HEAD'
            - 'GET'
          CachedMethods:
            - 'HEAD'
            - 'GET'
          Compress: false
          DefaultTTL: 86400
          ForwardedValues:
            Cookies:
              Forward: 'none'
            Headers:
              - 'Origin'
            QueryString: false
          MaxTTL: 31536000
          MinTTL: 86400
          TargetOriginId: !Sub 's3-origin-${ AiLabExampleDataBucket }'
          ViewerProtocolPolicy: 'redirect-to-https'
        DefaultRootObject: 'index.html'
        Enabled: true
        HttpVersion: 'http1.1'
        IPV6Enabled: true
        WebACLId: {{acl_arn}}
        Origins:
          - DomainName: !GetAtt AiLabExampleDataBucket.DomainName
            Id: !Sub 's3-origin-${ AiLabExampleDataBucket }'
            OriginPath: ''
            OriginAccessControlId: !Ref OAC
            # Despite the fact that we use OAC, and not the deprecated OAI, we need to add this field.
            # Otherwise, AWS complains during the deployment of the stack.
            # According to the documentation an empty string in OriginAccessIdentity means:
            # "If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element."
            # However, as we set the Bucket Access Control to private, the images can be accessed only
            # via the Cloudfront URL, and not the Amazon S3 URL.
            S3OriginConfig:
              OriginAccessIdentity: ''
        PriceClass: 'PriceClass_All'

  OAC:
    Type: 'AWS::CloudFront::OriginAccessControl'
    Properties:
      OriginAccessControlConfig:
          Description: Origin Access Control configuration for the AI-Lab ExampleData S3 Bucket
          Name: AiLabExampleDataBucketOAC
          OriginAccessControlOriginType: s3
          SigningBehavior: always
          SigningProtocol: sigv4

Outputs:
  {{BucketId}}:
    Value: !Ref AiLabExampleDataBucket
    Description: ID of the S3 bucket containing the AI-Lab Example Data.
  {{CfDistributionId}}:
    Value: !Ref CfDistribution
    Description: ID of the cloudfront distribution for the Example Data.
  {{CfDistributionDomainName}}:
    Value: !GetAtt CfDistribution.DomainName
    Description: Domain name of the cloudfront distribution for the Example Data.
