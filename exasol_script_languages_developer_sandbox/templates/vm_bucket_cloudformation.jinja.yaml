Resources:
  VMBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: 'Private'
    Metadata:
      Comment: 'Bucket to store script-language developer sandbox VM images'
    DeletionPolicy: Retain
    UpdateReplacePolicy : Retain
  VMExportRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
            - Effect: Allow
              Principal:
                  Service:
                    - vmie.amazonaws.com
              Action:
                - sts:AssumeRole
      Description: "IAM Role to run VM image exports on the S3-Bucket"
      Path: '/'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetBucketLocation
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:GetBucketAcl
                Resource:
                  - !Sub "arn:aws:s3:::${ VMBucket }/*"
                  - !Sub "arn:aws:s3:::${ VMBucket }"
              - Effect: Allow
                Action:
                  - ec2:ModifySnapshotAttribute
                  - ec2:CopySnapshot
                  - ec2:RegisterImage
                  - ec2:Describe*
                Resource:
                  - "*"
  S3CDNBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref VMBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:GetObject'
            Principal:
              Service: "cloudfront.amazonaws.com"
            Resource:
              - !Sub "arn:aws:s3:::${ VMBucket }/slc_developer_sandbox/*"
            Condition:
              StringEquals:
                'AWS:SourceArn': !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CfDistribution}"

  CfDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Comment: 'A simple distribution with an S3 origin'
        DefaultCacheBehavior:
          AllowedMethods:
            - 'HEAD'
            - 'GET'
          CachedMethods:
            - 'HEAD'
            - 'GET'
          Compress: false
          DefaultTTL: 86400
          ForwardedValues:
            Cookies:
              Forward: 'none'
            Headers:
              - 'Origin'
            QueryString: false
          MaxTTL: 31536000
          MinTTL: 86400
          TargetOriginId: !Sub 's3-origin-${ VMBucket }'
          ViewerProtocolPolicy: 'redirect-to-https'
        DefaultRootObject: 'index.html'
        Enabled: true
        HttpVersion: 'http1.1'
        IPV6Enabled: true
        WebACLId: {{acl_arn}}
        Origins:
          - DomainName: !GetAtt VMBucket.DomainName
            Id: !Sub 's3-origin-${ VMBucket }'
            OriginPath: ''
            OriginAccessControlId: !Ref OAC
            # Despite the fact that we use OAC, and not the deprecated OAI, we need to add this field.
            # Otherwise, AWS complains during the deployment of the stack.
            # According to the documentation an empty string in OriginAccessIdentity means:
            # "If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element."
            # However, as we set the Bucket Access Control to private, the images can be accessed only
            # via the Cloudfront URL, and not the Amazon S3 URL.
            S3OriginConfig:
              OriginAccessIdentity: ''
        PriceClass: 'PriceClass_All'

  OAC:
    Type: 'AWS::CloudFront::OriginAccessControl'
    Properties:
      OriginAccessControlConfig:
          Description: Origin Access Control config for the VM S3 Bucket
          Name: VM-Bucket-OAC
          OriginAccessControlOriginType: s3
          SigningBehavior: always
          SigningProtocol: sigv4

Outputs:
  {{VMBucketId}}:
    Value: !Ref VMBucket
    Description: Id of th S3 bucket
  {{VMExportRoleId}}:
    Value: !Ref VMExportRole
    Description: Id of the VMExportRole
  {{CfDistributionId}}:
    Description: 'Id for our cloudfront distribution'
    Value: !Ref CfDistribution
  {{CfDistributionDomainName}}:
    Description: 'Domain name for our cloudfront distribution'
    Value: !GetAtt CfDistribution.DomainName